<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Time Tracking</title>
  <link rel="stylesheet" href="/stylesheets/timetracking.css">
</head>

<body>
  <div class="stopwatch">
    <div id="display">00:00:00</div>
    <div class="buttons">
      <button id="start" onclick="startStopwatch()">Start</button>
      <button id="pause" onclick="pauseStopwatch()">Pause</button>
      <button id="submit" onclick="submitTime()">Submit</button>
    </div>
  </div>

  <script>
    let currentTime;
    let timer;
    let startTime;
    let pausedTime = document.getElementById('pause');

    // Check if there is a previously saved time
    let storedTime = localStorage.getItem('currentTime');
    if (storedTime) {
      document.getElementById("display").innerText = storedTime;
    }

    function startStopwatch() {
      startTime = Date.now() - (hours * 3600000 + minutes * 60000 + seconds * 1000);
      timer = setInterval(updateStopwatch, 1000);
      document.getElementById("start").disabled = true;
    }

    pausedTime.addEventListener('click', () => {
      var valueToSave = currentTime;
      localStorage.setItem('currentTime', valueToSave);
    });

    function pauseStopwatch() {
      clearInterval(timer);
      document.getElementById("start").disabled = false;
    }

    function submitTime() {
      const formattedTime = formatTime();
      const currentDate = new Date().toLocaleDateString();

      // Make an AJAX request to send the time and date to the server
      fetch('/api/submitTime', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          date: currentDate,
          time: formattedTime,
        }),
      })
        .then(response => response.json())
        .then(data => {
          alert(`Your working Time is succesfully submitted :${currentTime}`);
          localStorage.removeItem('currentTime');
          resetStopwatch();
          console.log('Server response:', data);
        })
        .catch(error => {
          console.error('Error submitting time:', error);
        });
    }

    function updateStopwatch() {
      const elapsedMilliseconds = Date.now() - startTime;
      seconds = Math.floor((elapsedMilliseconds / 1000) % 60);
      minutes = Math.floor((elapsedMilliseconds / 60000) % 60);
      hours = Math.floor(elapsedMilliseconds / 3600000);
      document.getElementById("display").innerText = formatTime();
    }

    function formatTime() {
      const formattedHours = String(hours).padStart(2, '0');
      const formattedMinutes = String(minutes).padStart(2, '0');
      const formattedSeconds = String(seconds).padStart(2, '0');
      currentTime = `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;
      return currentTime;
    }

    window.addEventListener('beforeunload', function () {
      var valueToSave = currentTime;
      localStorage.setItem('currentTime', valueToSave);
    });

    function resetStopwatch() {
      clearInterval(timer);
      hours = 0;
      minutes = 0;
      seconds = 0;
      document.getElementById("display").innerText = "00:00:00";
      document.getElementById("start").disabled = false;
    }
  </script>
</body>

</html>
